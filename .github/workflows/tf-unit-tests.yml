name: 'Terraform Unit Tests'

on:
  push:

permissions:
  security-events: write # Needed to upload-sarif
  contents: read # Needed to clone repo
  actions: read # Potentially needed for private repositories (see https://github.com/github/codeql-action/issues/2117)

jobs:
  terraform-unit-tests:
    name: 'Terraform Unit Tests'
    runs-on: ubuntu-latest

    env:
      RESOURCE_GROUP: rg-tf-samples
      STORAGE_ACCOUNT_NAME: fdsafewafg34

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: "Authenticate to Azure"
      id: "azure-login"
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get GitHub-hosted runner public IP
      id: get_ip
      run: |
        echo "Public IP: $(curl -s ifconfig.me)"
        echo "runner_ip=$(curl -s ifconfig.me)" >> $GITHUB_ENV

    - name: Whitelist GitHub-hosted runner IP on storage account firewall
      run: |
        az storage account network-rule add \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --account-name ${{ env.STORAGE_ACCOUNT_NAME }} \
          --ip-address ${{ env.runner_ip }}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend=false

    # Validate terraform files
    - name: Terraform Validate
      run: terraform validate

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check -recursive

    # Perform a security scan of the terraform code using checkov
    - name: Run Checkov action
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        framework: terraform

    # Upload results to GitHub Advanced Security
    - name: Upload SARIF file
      if: success() || failure()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif
        category: checkov

    # - name: Remove GitHub-hosted runner IP from storage account firewall
    #   if: always()  # Ensures this runs even if previous steps fail
    #   run: |
    #     az storage account network-rule remove \
    #       --resource-group ${{ env.RESOURCE_GROUP }} \
    #       --account-name ${{ env.STORAGE_ACCOUNT_NAME }} \
    #       --ip-address ${{ env.runner_ip }}
